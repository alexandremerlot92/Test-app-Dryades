// Get referencesconst form = document.getElementById("stockForm");// Listen for form submissionform.addEventListener("submit", function(event) {  event.preventDefault();  const date = document.getElementById("date").value;  const cuvee = document.getElementById("cuvee").value;  const millesime = document.getElementById("millesime").value;  const quantite = document.getElementById("quantite").value;  const commentaire = document.getElementById("commentaire").value;  if (date && cuvee && millesime && quantite) {    const rowData = { date, cuvee, millesime, quantite, commentaire };    // Save to Storage    console.log("Submitting row:", rowData);    db.collection("stock").add(rowData)    .then(() => {      alert("Stock ajoutÃ© !");      form.reset();    })    .catch((error) => {      console.error("Erreur lors de l'ajout :", error);      alert("Erreur : " + error.message);    });  }});async function calculateAndDisplayFinalStock() {  const stockMap = {};  try {    // Fetch stock modifications    const stockSnapshot = await db.collection("stock").get();    stockSnapshot.forEach(doc => {      const { cuvee, millesime, quantite } = doc.data();      const key = `${cuvee}-${millesime}`;      stockMap[key] = (stockMap[key] || 0) + parseInt(quantite);    });    // Fetch sales    const salesSnapshot = await db.collection("sales").get();    salesSnapshot.forEach(doc => {      const { cuvee, millesime, quantite } = doc.data();      const key = `${cuvee}-${millesime}`;      stockMap[key] = (stockMap[key] || 0) - parseInt(quantite);    });    // Render final stock table    const tbody = document.querySelector("#finalStockTable tbody");    tbody.innerHTML = "";    for (const key in stockMap) {      const [cuvee, millesime] = key.split("-");      const row = document.createElement("tr");      row.innerHTML = `        <td>${cuvee}</td>        <td>${millesime}</td>        <td>${stockMap[key]}</td>      `;      tbody.appendChild(row);    }  } catch (error) {    console.error("Erreur lors du calcul du stock final :", error);  }}document.addEventListener("DOMContentLoaded", () => {  calculateAndDisplayFinalStock();});